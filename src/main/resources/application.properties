#-----------------------------KafkaProperty----------------------------------------------
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset=latest

server.port=9000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
#KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#-----------------------------------------------------------------------

#-----------------------------MySqlDataBaseProperty---------------------------------
spring.datasource.url = jdbc:mysql://localhost:3306/wikimedia
spring.datasource.username=springstudent
spring.datasource.password=springstudent
#spring.datasource.url=${DATABASE_URL}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}
#---------------------------  ElasticSearchProperty----------------------------------------------
spring.data.elasticsearch.cluster-names=message_request
spring.data.elasticsearch.cluster-node=localhost:9200



